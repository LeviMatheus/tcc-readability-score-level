
In computing, WYSIWYG ( or ), an acronym for What You See Is What You Get, is a system in which editing software allows content to be edited in a form that resembles its appearance when printed or displayed as a finished product, such as a printed document, web page, or slide presentation.
Meaning.
WYSIWYG implies a user interface that allows the user to view something very similar to the end result—while the document is being created. In general, WYSIWYG implies the ability to directly manipulate the layout of a document without having to type or remember names of layout commands. The actual meaning depends on the user's perspective, e.g.:
Modern software does a good job of optimizing the screen display for a particular type of output. For example, a word processor is optimized for output to a typical printer. The software often emulates the resolution of the printer in order to get as close as possible to WYSIWYG. However, that is not the main attraction of WYSIWYG, which is the ability of the user to be able to visualize what they are producing.
In many situations, the subtle differences between what the user sees and what the user gets are unimportant. In fact, applications may offer multiple WYSIWYG modes with different levels of "realism", including
History.
Before the adoption of WYSIWYG techniques, text appeared in editors using the system standard typeface and style with little indication of layout (margins, spacing, etc.). Users were required to enter special non-printing "control codes" (now referred to as markup "code tags") to indicate that some text should be in boldface, italics, or a different typeface or size. In this environment there was very little distinction between text editors and word processors.
These applications typically used an arbitrary markup language to define the codes/tags. Each program had its own special way to format a document, and it was a difficult and time-consuming process to change from one word processor to another.
The use of markup tags and codes remains popular today in some applications due to their ability to store complex formatting information. When the tags are made visible in the editor, however, they occupy space in the unformatted text, and as a result can disrupt the desired layout and flow.
Bravo, a document preparation program for the Alto produced at Xerox PARC by Butler Lampson, Charles Simonyi and colleagues in 1974, is generally considered to be the first program to incorporate the WYSIWYG technology, displaying text with formatting (e.g. with justification, fonts, and proportional spacing of characters). The Alto monitor (72 PPI, based on the typographic unit) was designed so that one full page of text could be seen and then printed on the first laser printers. When the text was laid out on the screen, 72 PPI font metric files were used, but when printed, 300 PPI files were used. As a result, one would occasionally find characters and words that are slightly off—a problem that would continue up to this day.
Bravo was released commercially, and the software eventually included in the Xerox Star can be seen as a direct descendant of it.
In late 1978, in parallel with but independent of the work at Xerox PARC, Hewlett Packard developed and released the first commercial WYSIWYG software application for producing overhead slides (or what today are referred to as presentation graphics). The first release, named BRUNO (after an HP sales training puppet), ran on the HP 1000 minicomputer, taking advantage of HP 2640—HP's first bitmapped computer terminal. BRUNO was then ported to the HP-3000 and re-released as "HP Draw".
By 1981, MicroPro advertised that its WordStar word processor had WYSIWYG, but its display was limited to displaying styled text in WYSIWYG fashion; bold and "italic" text would be represented on screen, instead of being surrounded by tags or special control characters. In 1983, the "Weekly Reader" advertised its Stickybear educational software with the slogan "what you see is what you get", with photographs of its Apple II graphics, but home computers of the 1970s and early 1980s lacked the sophisticated graphics capabilities necessary to display WYSIWYG documents, meaning that such applications were usually confined to limited-purpose, high-end workstations (such as the IBM Displaywriter System) that were too expensive for the general public to afford. Towards the mid-1980s, however, things began to change. as improving technology allowed the production of cheaper bitmapped displays, and WYSIWYG software started to appear in more popular computers, including LisaWrite for the Apple Lisa, released in 1983, and MacWrite for the Apple Macintosh, released in 1984.
The Apple Macintosh system was originally designed so that the screen resolution and the resolution of the ImageWriter dot-matrix printers sold by Apple were easily scaled: 72 PPI for the screen and 144 DPI for the printers. Thus, the scale and dimensions of the on-screen display in programs such as MacWrite and MacPaint were easily translated to the printed output. If the paper were held up to the screen, the printed image would be the same size as the on-screen image, but at twice the resolution. As the ImageWriter was the only model of printer physically compatible with the Macintosh printer port, this created an effective closed system. Later, when Macs-using external displays became available, the resolution was fixed to the size of the screen to achieve 72 DPI. These resolutions often differed from the VGA-standard resolutions common in the PC world at the time. Thus, while a Macintosh monitor had the same 640 × 480 resolution as a PC, a screen would be fixed at 832 × 624 rather than the 800 × 600 resolution used by PCs. With the introduction of third-party dot-matrix printers as well as laser printers and multisync monitors, resolutions deviated from even multiples of the screen resolution, making true WYSIWYG harder to achieve.
Etymology.
The phrase "what you see is what you get," from which the acronym derives, was a catchphrase popularized by Flip Wilson's drag persona Geraldine, first appearing in September 1969, then regularly in the early 1970s on "The Flip Wilson Show". The phrase was a statement demanding acceptance of Geraldine's entire personality and appearance.
Furthermore, multiple hit songs and albums debuted in 1971 that could have also contributed to popularizing this phrase including "What You See Is What You Get" by Stoney &amp; Meatloaf, "Stand by Me (Whatcha See Is Whatcha Get)" by Bernard Purdie, and "Whatcha See Is Whatcha Get" by The Dramatics.
As it relates to computing, there are multiple claims to first use of the phrase:
Criticism.
Because designers of WYSIWYG applications typically have to account for a variety of different output devices, each of which has different capabilities, there are a number of problems that must be solved in each implementation. These can be seen as tradeoffs between multiple design goals, hence applications that use different solutions may be suitable for different purposes.
Typically, the design goals of a WYSIWYG application may include the following:
However, it is usually not possible to achieve all of these goals at once, and the major problem to overcome is that of the varying output resolutions. As of 2016, monitors typically have a resolution of between 102 and 125 pixels per inch, while printers generally have resolutions between 240 and 1440 pixels per inch. In some printers, the horizontal resolution is different from the vertical. This becomes a problem when trying to lay out text; because older output technologies require the spacing between characters to be a whole number of pixels (as rounding errors will cause the same text to require different amounts of space in different resolutions).
Solutions to this include the following:
Other problems that have been faced in the past include differences in the fonts used by the printer and the on-screen display (largely solved by the use of downloadable font technologies like TrueType), and differences in color profiles between devices (mostly solved by printer drivers with good color model conversion software).
Apart from these issues, the practice of WYSIWYG has also been argued to being more conducive to a distracted writing process, as the WYSIWYG philosophy assumes no separation between composition and formatting, which opens up the possibility of repeatedly tweaking the layout of the document—as one prepares its content in real-time.
Related acronyms.
Many variations are used only to illustrate a point or make a joke, and have very limited real use. Some that have been proposed include the following:

