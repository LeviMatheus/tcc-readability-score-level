
A bulletin board system or BBS (also called "Computer Bulletin Board Service", "CBBS") is a computer server running software that allows users to connect to the system using a terminal program. Once logged in, the user can perform functions such as uploading and downloading software and data, reading news and bulletins, and exchanging messages with other users through public message boards and sometimes via direct chatting. In the early 1980s, message networks such as FidoNet sprang up to provide services such as NetMail, which is similar to internet based email.
Many BBSes also offer online games in which users can compete with each other. BBSes with multiple phone lines often provide chat rooms, allowing users to interact with each other. Bulletin board systems were in many ways a precursor to the modern form of the World Wide Web, social networks, and other aspects of the Internet. Low-cost, high-performance modems drove the use of online services and BBSes through the early 1990s. "InfoWorld" estimated that there were 60,000 BBSes serving 17 million users in the United States alone in 1994, a collective market much larger than major online services such as CompuServe.
The introduction of inexpensive dial-up internet service and the Mosaic web browser offered ease of use and global access that BBS and online systems did not provide, and led to a rapid crash in the market starting in 1994. Over the next year, many of the leading BBS software providers went bankrupt and tens of thousands of BBSes disappeared. Today, BBSing survives largely as a nostalgic hobby in most parts of the world, but it is still an extremely popular form of communication for Taiwanese youth (see PTT Bulletin Board System). Most surviving BBSes are accessible over Telnet and typically offer free email accounts, FTP services, IRC and all the protocols commonly used on the Internet. Some offer access through packet switched networks or packet radio connections.
History.
Precursors.
A precursor to the public bulletin board system was Community Memory, started in August 1973 in Berkeley, California. Useful microcomputers did not exist at that time, and modems were both expensive and slow. Community Memory therefore ran on a mainframe computer and was accessed through terminals located in several San Francisco Bay Area neighborhoods. The poor quality of the original modem connecting the terminals to the mainframe prompted Community Memory hardware person, Lee Felsenstein, to invent the Pennywhistle modem, whose design was highly influential in the mid-1970s.
Community Memory allowed the user to type messages into a computer terminal after inserting a coin, and offered a "pure" bulletin board experience with public messages only (no email or other features). It did offer the ability to tag messages with keywords, which the user could use in searches. The system acted primarily in the form of a buy and sell system with the tags taking the place of the more traditional classifications. But users found ways to express themselves outside these bounds, and the system spontaneously created stories, poetry and other forms of communications. The system was expensive to operate, and when their host machine became unavailable and a new one could not be found, the system closed in January 1975.
Similar functionality was available to most mainframe users, which might be considered a sort of ultra-local BBS when used in this fashion. Commercial systems, expressly intended to offer these features to the public, became available in the late 1970s and formed the online service market that lasted into the 1990s. One particularly influential example was PLATO, which had thousands of users by the late 1970s, many of whom used the messaging and chat room features of the system in the same way that would become common on BBSes.
The first BBSes.
Early modems were generally very simple devices using acoustic couplers to handle telephone operation. The user would first pick up the phone, dial a number, then press the handset into rubber cups on the top of the modem. Disconnecting at the end of a call required the user to pick up the handset and return it to the phone. Examples of direct-connecting modems did exist, and these often allowed the host computer to send it commands to answer or hang up calls, but these were very expensive devices used by large banks and similar companies.
With the introduction of microcomputers with expansion slots, like the S-100 bus machines and Apple II, it became possible for the modem to communicate instructions and data on separate lines. A number of modems of this sort were available by the late 1970s. This made the BBS possible for the first time, as it allowed software on the computer to pick up an incoming call, communicate with the user, and then hang up the call when the user logged off.
The first public dial-up BBS was developed by Ward Christensen and Randy Suess. According to an early interview, when Chicago was snowed under during the Great Blizzard of 1978, the two began preliminary work on the Computerized Bulletin Board System, or CBBS. The system came into existence largely through a fortuitous combination of Christensen having a spare S-100 bus computer and an early Hayes internal modem, and Suess's insistence that the machine be placed at his house in Chicago where it would be a local phone call for more users. Christensen patterned the system after the cork board his local computer club used to post information like "need a ride". CBBS officially went online on 16 February 1978. CBBS, which kept a count of callers, reportedly connected 253,301 callers before it was finally retired.
Smartmodem.
A key innovation required for the popularization of the BBS was the Smartmodem manufactured by Hayes Microcomputer Products. Internal modems like the ones used by CBBS and similar early systems were usable, but generally expensive due to the manufacturer having to make a different modem for every computer platform they wanted to target. They were also limited to those computers with internal expansion, and could not be used with other useful platforms like video terminals. External modems were available for these platforms but required the phone to be dialed using a conventional handset, making them unable to accept incoming calls without manual intervention. Internal modems could be software controlled to perform both outbound and inbound calls, but external modems had only the data pins to communicate with the host system.
Hayes' solution to the problem was to use a small microcontroller to implement a system that examined the data flowing into the modem from the host computer, watching for certain command strings. This allowed commands to be sent to and from the modem using the same data pins as all the rest of the data, meaning it would work on any system that could support even the most basic modems. The Smartmodem could pick up the phone, dial numbers, and hang up again, all without any operator intervention. The Smartmodem was not necessary for BBS use but made overall operation dramatically simpler. It also improved usability for the caller, as most terminal software allowed different phone numbers to be stored and dialed on command, allowing the user to easily connect to a series of systems.
The introduction of the Smartmodem led to the first real wave of BBS systems. Limited in both speed and storage capacity, these systems were normally dedicated solely to messaging, both private email and public forums. File transfers were painfully slow at these speeds, and file libraries were typically limited to text files containing lists of other BBS systems. These systems attracted a particular type of user who used the BBS as a unique type of communications medium, and when these local systems were crowded from the market in the 1990s, their loss was lamented for many years.
Higher speeds, commercialization.
Speed improved with the introduction of 1200 bit/s modems in the early 1980s, giving way to 2400 bit/s fairly rapidly. The improved performance led to a substantial increase in BBS popularity. Most of the information was displayed using ordinary ASCII text or ANSI art, but a number of systems attempted character-based graphical user interfaces which began to be practical at 2400 bit/s.
There was a lengthy delay before 9600 bit/s models began to appear on the market. 9600 bit/s was not even established as a strong standard before V.32bis at 14.4 kbit/s took over in the early 1990s. This period also saw the rapid rise in capacity and a dramatic drop in the price of hard drives. By the late 1980s, many BBS systems had significant file libraries, and this gave rise to leeching, users calling BBSes solely for their files. These users would tie up the modem for some time, leaving less time for other users, who got busy signals. The resulting upheaval eliminated many of the pioneering message-centric systems.
This also gave rise to a new class of BBS systems, dedicated solely to file upload and downloads. These systems charged for access, typically a flat monthly fee, compared to the per-hour fees charged by "Event Horizons BBS" and most online services. A host of 3rd party services sprang up to support these systems, offering simple credit card merchant account gateways for the payment of monthly fees, and entire file libraries on compact disk that made initial setup very easy. Early 1990s editions of "Boardwatch" were filled with ads for single-click install solutions dedicated to these new sysops. While this gave the market a bad reputation, it also led to its greatest success. During the early 1990s, there were a number of mid-sized software companies dedicated to BBS software, and the number of BBSes in service reached its peak.
Towards the early 1990s, the BBS industry became so popular that it spawned three monthly magazines, "Boardwatch", "BBS Magazine", and in Asia and Australia, "Chips 'n Bits Magazine" which devoted extensive coverage of the software and technology innovations and people behind them, and listings to US and worldwide BBSes. In addition, in the US, a major monthly magazine, "Computer Shopper", carried a list of BBSes along with a brief abstract of each of their offerings.
GUIs.
Through the late 1980s and early 1990s, there was considerable experimentation with ways to improve the BBS experience from its command-line interface roots. Almost every popular system improved matters somewhat by adding ANSI-based color menus to make reading easier, and most also allowed cursor commands to offer command-line recall and similar features. Another common feature was the use of autocomplete to make menu navigation simpler, a feature that would not re-appear on the web until decades later.
A number of systems also made forays into GUI-based interfaces, either using character graphics sent from the host, or using custom GUI-based terminal systems. The latter initially appeared, unsurprisingly, on the Macintosh platform, where TeleFinder and FirstClass became very popular. FirstClass offered a host of features that would be difficult or impossible under a terminal-based solution, including bi-directional information flow and non-blocking operation that allowed the user to exchange files in both directions while continuing to use the message system and chat, all in separate windows. Skypix featured on Amiga a complete markup language. It used a standardized set of icons to indicate mouse driven commands available online and to recognize different filetypes present on BBS storage media. It was capable to transmit data like images, audio files, and audio clips between users linked to same BBS or off-line if BBS was in the circuit of FidoNet organization.
On the PC, efforts were more oriented to extensions of the original terminal concept, with the GUI being described in the information on the host. One example was the Remote Imaging Protocol, essentially a picture description system, which remained relatively obscure. Probably the ultimate development of this style of operation was the dynamic page implementation of the University of Southern California BBS (USCBBS) by Susan Biddlecomb, which predated the implementation of the HTML Dynamic web page. A complete Dynamic web page implementation was accomplished using TBBS with a TDBS add-on presenting a complete menu system individually customized for each user.
Rise of the Internet and decline of BBS.
The demand for complex ANSI and ASCII screens and larger file transfers taxed available channel capacity, which in turn propelled demand for faster modems. 14.4 kbit/s modems were standard for a number of years while various companies attempted to introduce non-standard systems with higher performance, normally about 19.2 kbit/s. Another delay followed due to a long V.34 standards process before 28.8 kbit/s was released, only to be quickly replaced by 33.6 kbit/s, and then 56 kbit/s.
These increasing speeds had the side effect of dramatically reducing the noticeable effects of channel efficiency. When modems were slow, considerable effort was put into developing the most efficient protocols and display systems possible. Running a general-purpose protocol like TCP/IP over a 1200 bit/s modem was a painful experience. With 56 kbit/s modems, however, the overhead was so greatly reduced as to be unnoticeable. Dial-up Internet service became widely available in 1994, and a must-have option for any general-use operating system by 1995.
These developments together resulted in the sudden obsolescence of bulletin board technology in 1995 and the collapse of its supporting market. Technically, Internet service offered an enormous advantage over BBS systems, as a single connection to the user's Internet service provider allowed them to contact services around the world. In comparison, BBS systems relied on a direct point-to-point connection, so even dialing multiple local systems required multiple phone calls. Moreover, Internet protocols allowed that same single connection to be used to contact multiple services at the same time, say download files from an FTP library while checking the weather on a local news web site. In comparison, a connection to a BBS allowed access only to the information on that system.
Estimating numbers.
According to the FidoNet Nodelist, BBSes reached their peak usage around 1996, which was the same period that the World Wide Web and AOL became mainstream. BBSes rapidly declined in popularity thereafter, and were replaced by systems using the Internet for connectivity. Some of the larger commercial BBSes, such as MaxMegabyte and ExecPC BBS, evolved into Internet service providers.
The website "textfiles.com" serves as an archive that documents the history of the BBS. The historical BBS list on "textfiles.com" contains over 105,000 BBSes that have existed over a span of 20 years in North America alone. The owner of "textfiles.com", Jason Scott, also produced "", a DVD film that chronicles the history of the BBS and features interviews with well-known people (mostly from the United States) from the heyday BBS era.
In the 2000s, most traditional BBS systems migrated to the Internet using Telnet or SSH protocols. Between 700 and 800 are thought to be active in 2020, fewer than 30 of these being of the traditional "dial-up" (modem) variety.
Software and hardware.
Unlike modern websites and online services that are typically hosted by third-party companies in commercial data centers, BBS computers (especially for smaller boards) were typically operated from the SysOp's home. As such, access could be unreliable, and in many cases, only one user could be on the system at a time. Only larger BBSes with multiple phone lines using specialized hardware, multitasking software, or a LAN connecting multiple computers, could host multiple simultaneous users.
The first BBSes used homebrew software, quite often written or customized by the SysOps themselves, running on early S-100 bus microcomputer systems such as the Altair 8800, IMSAI 8080 and Cromemco under the CP/M operating system. Soon after, BBS software was being written for all of the major home computer systems of the late 1970s era – the Apple II, Atari 8-bit family, Commodore and TRS-80 being some of the most popular.
A few years later, in 1981, IBM introduced the first DOS based IBM PC, and due to the overwhelming popularity of PCs and their clones, DOS soon became the operating system on which the majority of BBS programs were run. RBBS-PC, ported over from the CP/M world, and "Fido" BBS, created by Tom Jennings (who later founded FidoNet) were the first notable DOS BBS programs. Many successful commercial BBS programs were developed for DOS, such as PCBoard BBS, RemoteAccess BBS, and Wildcat! BBS. Some popular freeware BBS programs for DOS included Telegard BBS and Renegade BBS, which both had early origins from leaked WWIV BBS source code. There were several dozen other BBS programs developed over the DOS era, and many were released under the shareware concept, while some were released as freeware including iniquity.
BBS systems on other systems remained popular, especially home computers, largely because they catered to the audience of users running those machines. The ubiquitous Commodore 64 (introduced in 1982) was a common platform in the 1980s. Popular commercial BBS programs were Blue Board, Ivory BBS, Color64 and CNet 64. In the early 1990s, a small number of BBSes were also running on the Commodore Amiga. Popular BBS software for the Amiga were ABBS, Amiexpress, C-Net, StormforceBBS, Infinity and Tempest. There was also a small faction of devoted Atari BBSes that used the Atari 800, then the 800XL, and eventually the 1040ST. The earlier machines generally lacked hard drive capabilities, which limited them primarily to messaging.
MS-DOS continued to be the most popular operating system for BBS use up until the mid-1990s, and in the early years, most multi-node BBSes were running under a DOS based multitasker such as DESQview or consisted of multiple computers connected via a LAN. In the late 1980s, a handful of BBS developers implemented multitasking communications routines inside their software, allowing multiple phone lines and users to connect to the same BBS computer. These included Galacticomm's MajorBBS (later WorldGroup), eSoft The Bread Board System (TBBS), and Falken. Other popular BBS's were Maximus and Opus, with some associated applications such as BinkleyTerm being based on characters from the Berkley Breathed cartoon strip of Bloom County. Though most BBS software had been written in BASIC or Pascal (with some low-level routines written in assembly language), the C language was starting to gain popularity.
By 1995, many of the DOS-based BBSes had begun switching to modern multitasking operating systems, such as OS/2, Windows 95, and Linux. One of the first graphics based BBS applications was Excalibur BBS with a low bandwidth applications that required its own client for efficiency. This led to one of the earliest implementations of Electronic Commerce in 1996 with replication of partner stores around the globe. TCP/IP networking allowed most of the remaining BBSes to evolve and include Internet hosting capabilities. Recent BBS software, such as Synchronet, Mystic BBS, EleBBS, DOC or Wildcat! BBS, provide access using the Telnet protocol rather than dialup, or by using legacy DOS-based BBS software with a FOSSIL-to-Telnet redirector such as NetFoss.
Presentation.
BBSes were generally text-based, rather than GUI-based, and early BBSes conversed using the simple ASCII character set. However, some home computer manufacturers extended the ASCII character set to take advantage of the advanced color and graphics capabilities of their systems. BBS software authors included these extended character sets in their software, and terminal program authors included the ability to display them when a compatible system was called. Atari's native character set was known as ATASCII, while most Commodore BBSes supported PETSCII. PETSCII was also supported by the nationwide online service Quantum Link.
The use of these custom character sets was generally incompatible between manufacturers. Unless a caller was using terminal emulation software written for, and running on, the same type of system as the BBS, the session would simply fall back to simple ASCII output. For example, a Commodore 64 user calling an Atari BBS would use ASCII rather than the machine's native character set. As time progressed, most terminal programs began using the ANSI standard, but could use their native character set if it was available.
COCONET, a BBS system made by Coconut Computing, Inc., was released in 1988 and only supported a GUI (no text interface was initially available but eventually became available around 1990), and worked in EGA/VGA graphics mode, which made it stand out from the text-based BBS systems. COCONET's bitmap and vector graphics and support for multiple type fonts were inspired by the PLATO system, and the graphics capabilities were based on what was available in the Borland BGI graphics library. A competing approach called Remote Imaging Protocol (RIP) emerged and was promoted by Telegrafix in the early to mid-1990s but it never became widespread. An industry standard technology called NAPLPS was also considered, and although it became the underlying graphics technology behind the Prodigy service, it never gained popularity in the BBS market. There were several GUI-based BBSes on the Apple Macintosh platform, including TeleFinder and FirstClass, but these remained widely used only in the Mac market.
In the UK, the BBC Micro based OBBS software, available from Pace for use with their modems, optionally allowed for color and graphics using the Teletext based graphics mode available on that platform. Other systems used the Viewdata protocols made popular in the UK by British Telecom's Prestel service, and the on-line magazine Micronet 800 whom were busy giving away modems with their subscriptions.
The most popular form of online graphics was ANSI art, which combined the IBM Extended ASCII character set's blocks and symbols with ANSI escape sequences to allow changing colors on demand, provide cursor control and screen formatting, and even basic musical tones. During the late 1980s and early 1990s, most BBSes used ANSI to make elaborate welcome screens, and colorized menus, and thus, ANSI support was a sought-after feature in terminal client programs. The development of ANSI art became so popular that it spawned an entire BBS "artscene" subculture devoted to it.
The Amiga "Skyline BBS" software was the first in 1987 featuring a script markup language communication protocol called Skypix which was capable of giving the user a complete graphical interface, featuring rich graphic content, changeable fonts, mouse-controlled actions, animations and sound.
Today, most BBS software that is still actively supported, such as Worldgroup, Wildcat! BBS and Citadel/UX, is Web-enabled, and the traditional text interface has been replaced (or operates concurrently) with a Web-based user interface. For those more nostalgic for the true BBS experience, one can use NetSerial (Windows) or DOSBox (Windows/*nix) to redirect DOS COM port software to telnet, allowing them to connect to Telnet BBSes using 1980s and 1990s era modem terminal emulation software, like Telix, Terminate, Qmodem and Procomm Plus. Modern 32-bit terminal emulators such as mTelnet and SyncTerm include native telnet support.
Content and access.
Since most early BBSes were run by computer hobbyists, they were typically technical in topic, with user communities revolving around hardware and software discussions.
As the BBS phenomenon grew, so did the popularity of special interest boards. Bulletin Board Systems could be found for almost every hobby and interest. Popular interests included politics, religion, music, dating, and alternative lifestyles. Many SysOps also adopted a theme in which they customized their entire BBS (welcome screens, prompts, menus, and so on) to reflect that theme. Common themes were based on fantasy, or were intended to give the user the illusion of being somewhere else, such as in a sanatorium, wizard's castle, or on a pirate ship.
In the early days, the file download library consisted of files that the SysOps obtained themselves from other BBSes and friends. Many BBSes inspected every file uploaded to their public file download library to ensure that the material did not violate copyright law. As time went on, shareware CD-ROMs were sold with up to thousands of files on each CD-ROM. Small BBSes copied each file individually to their hard drive. Some systems used a CD-ROM drive to make the files available. Advanced BBSes used Multiple CD-ROM disc changer units that switched 6 CD-ROM disks on demand for the caller(s). Large systems used all 26 DOS drive letters with multi-disk changers housing tens of thousands of copyright-free shareware or freeware files available to all callers. These BBSes were generally more family friendly, avoiding the seedier side of BBSes. Access to these systems varied from single to multiple modem lines with some requiring little or no confirmed registration.
Some BBSes, called elite, WaReZ or pirate boards, were exclusively used for distributing cracked software, phreaking, and other questionable or unlawful content. These BBSes often had multiple modems and phone lines, allowing several users to upload and download files at once. Most elite BBSes used some form of new user verification, where new users would have to apply for membership and attempt to prove that they were not a law enforcement officer or a "lamer." The largest elite boards accepted users by invitation only. Elite boards also spawned their own subculture and gave rise to the slang known today as leetspeak.
Another common type of board was the "support BBS" run by a manufacturer of computer products or software. These boards were dedicated to supporting users of the company's products with question and answer forums, news and updates, and downloads. Most of them were not a free call. Today, these services have moved to the web.
Some general purpose Bulletin Board Systems had special levels of access that were given to those who paid extra money, uploaded useful files or knew the SysOp personally. These specialty and pay BBSes usually had something unique to offer their users, such as large file libraries, warez, pornography, chat rooms or Internet access.
Pay BBSes such as The WELL and Echo NYC (now Internet forums rather than dial-up), ExecPC, PsudNetwork and MindVox (which folded in 1996) were admired for their tight-knit communities and quality discussion forums. However, many free BBSes also maintained close knit communities, and some even had annual or bi-annual events where users would travel great distances to meet face-to-face with their on-line friends. These events were especially popular with BBSes that offered chat rooms.
Some of the BBSes that provided access to illegal content faced opposition. On July 12, 1985, in conjunction with a credit card fraud investigation, the Middlesex County, New Jersey Sheriff's department raided and seized The Private Sector BBS, which was the official BBS for grey hat hacker quarterly 2600 Magazine at the time. The notorious Rusty n Edie's BBS, in Boardman, Ohio, was raided by the FBI in January 1993 for trading unlicensed software, and later sued by Playboy for copyright infringement in November 1997. In Flint, Michigan, a 21-year-old man was charged with distributing child pornography through his BBS in March 1996.
Networks.
Most early BBSes operated as individual systems. Information contained on that BBS never left the system, and users would only interact with the information and user community on that BBS alone. However, as BBSes became more widespread, there evolved a desire to connect systems together to share messages and files with distant systems and users. The largest such network was FidoNet.
As is it was prohibitively expensive for the hobbyist SysOp to have a dedicated connection to another system, FidoNet was developed as a store and forward network. Private email (Netmail), public message boards (Echomail) and eventually even file attachments on a FidoNet-capable BBS would be bundled into one or more archive files over a set time interval. These archive files were then compressed with ARC or ZIP and forwarded to (or polled by) another nearby node or hub via a dialup Xmodem session. Messages would be relayed around various FidoNet hubs until they were eventually delivered to their destination. The hierarchy of FidoNet BBS nodes, hubs, and zones was maintained in a routing table called a Nodelist. Some larger BBSes or regional FidoNet hubs would make several transfers per day, some even to multiple nodes or hubs, and as such, transfers usually occurred at night or early morning when toll rates were lowest. In Fido's heyday, sending a Netmail message to a user on a distant FidoNet node, or participating in an Echomail discussion could take days, especially if any FidoNet nodes or hubs in the message's route only made one transfer call per day.
FidoNet was platform-independent and would work with any BBS that was written to use it. BBSes that did not have integrated FidoNet capability could usually add it using an external FidoNet front-end mailer such as SEAdog, FrontDoor, BinkleyTerm, InterMail or D'Bridge, and a mail processor such as FastEcho or Squish. The front-end mailer would conduct the periodic FidoNet transfers, while the mail processor would usually run just before and just after the mailer ran. This program would scan for and pack up new outgoing messages, and then unpack, sort and "toss" the incoming messages into a BBS user's local email box or into the BBS's local message bases reserved for Echomail. As such, these mail processors were commonly called "scanner/tosser/packers."
Many other BBS networks followed the example of FidoNet, using the same standards and the same software. These were called FidoNet Technology Networks (FTNs). They were usually smaller and targeted at selected audiences. Some networks used QWK doors, and others such as RelayNet (RIME) and WWIVnet used non-Fido software and standards.
Before commercial Internet access became common, these networks of BBSes provided regional and international e-mail and message bases. Some even provided gateways, such as UFGATE, by which members could send/receive e-mail to/from the Internet via UUCP, and many FidoNet discussion groups were shared via gateway to Usenet. Elaborate schemes allowed users to download binary files, search gopherspace, and interact with distant programs, all using plain text e-mail.
As the volume of FidoNet Mail increased and newsgroups from the early days of the Internet became available, satellite data downstream services became viable for larger systems. The satellite service provided access to FidoNet and Usenet newsgroups in large volumes at a reasonable fee. By connecting a small dish &amp; receiver, a constant downstream of thousands of FidoNet and Usenet newsgroups could be received. The local BBS only needed to upload new outgoing messages via the modem network back to the satellite service. This method drastically reduced phone data transfers while dramatically increasing the number of message forums.
FidoNet is still in use today, though in a much smaller form, and many Echomail groups are still shared with Usenet via FidoNet to Usenet gateways. Widespread abuse of Usenet with spam and pornography has led to many of these FidoNet gateways to cease operation completely.
Shareware and freeware.
Much of the shareware movement was started via user distribution of software through BBSes. A notable example was Phil Katz's PKARC (and later PKZIP, using the same ".zip" algorithm that WinZip and other popular archivers now use); also other concepts of software distribution like freeware, postcardware like JPEGview and donationware like Red Ryder for the Macintosh first appeared on BBS sites. Doom from id Software and nearly all Apogee Software games were distributed as shareware (Apogee is, in fact, credited for adding an order form to a shareware demo). The Internet has largely erased the distinction of shareware – most users now download the software directly from the developer's website rather than receiving it from another BBS user 'sharing' it. Today shareware is commonly used to mean electronically distributed software from a small developer.
Many commercial BBS software companies that continue to support their old BBS software products switched to the shareware model or made it entirely free. Some companies were able to make the move to the Internet and provide commercial products with BBS capabilities.
Features.
A classic BBS had:
The BBS software usually provides:

