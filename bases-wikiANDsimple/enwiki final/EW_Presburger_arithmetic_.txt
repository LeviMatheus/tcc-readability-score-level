
Presburger arithmetic is the first-order theory of the natural numbers with addition, named in honor of Mojżesz Presburger, who introduced it in 1929. The signature of Presburger arithmetic contains only the addition operation and equality, omitting the multiplication operation entirely. The axioms include a schema of induction.
Presburger arithmetic is much weaker than Peano arithmetic, which includes both addition and multiplication operations. Unlike Peano arithmetic, Presburger arithmetic is a decidable theory. This means it is possible to algorithmically determine, for any sentence in the language of Presburger arithmetic, whether that sentence is provable from the axioms of Presburger arithmetic. The asymptotic running-time computational complexity of this algorithm is at least doubly exponential, however, as shown by .
Overview.
The language of Presburger arithmetic contains constants 0 and 1 and a binary function +, interpreted as addition.
In this language, the axioms of Presburger arithmetic are the universal closures of the following:
(5) is an axiom schema of induction, representing infinitely many axioms. These cannot be replaced by any finite number of axioms, that is, Presburger arithmetic is not finitely axiomatizable in first-order logic.
Presburger arithmetic can be viewed as first-order theory with equality containing precisely all consequences of the above axioms. Alternatively, it can be defined as the set of those sentences that are true in the intended interpretation: the structure of non-negative integers with constants 0, 1, and the addition of non-negative integers.
Presburger arithmetic is designed to be complete and decidable. Therefore, it cannot formalize concepts such as divisibility or primality, or, more generally, any number concept leading to multiplication of variables. However, it can formulate individual instances of divisibility; for example, it proves "for all "x", there exists "y" : ("y" + "y" = "x") ∨ ("y" + "y" + 1 = "x")". This states that every number is either even or odd.
Properties.
Mojżesz Presburger proved Presburger arithmetic to be:
The decidability of Presburger arithmetic can be shown using quantifier elimination, supplemented by reasoning about arithmetical congruence (, , Enderton 2001, p. 188). The steps used to justify a quantifier elimination algorithm can be used to define recursive axiomatizations that do not necessarily contain the axiom schema of induction (, ).
In contrast, Peano arithmetic, which is Presburger arithmetic augmented with multiplication, is not decidable, as a consequence of the negative answer to the Entscheidungsproblem. By Gödel's incompleteness theorem, Peano arithmetic is incomplete and its consistency is not internally provable (but see Gentzen's consistency proof).
Computational Complexity.
The decision problem for Presburger arithmetic is an interesting example in computational complexity theory and computation. Let "n" be the length of a statement in Presburger arithmetic. Then Fischer and Rabin (1974) proved that, in the worst case, the proof of the statement in first order logic has length at least formula_1, for some constant "c"&gt;0. Hence, their decision algorithm for Presburger arithmetic has runtime at least exponential. Fischer and Rabin also proved that for any reasonable axiomatization (defined precisely in their paper), there exist theorems of length "n" which have doubly exponential length proofs. Intuitively, this suggests there are computational limits on what can be proven by computer programs. Fischer and Rabin's work also implies that Presburger arithmetic can be used to define formulas which correctly calculate any algorithm as long as the inputs are less than relatively large bounds. The bounds can be increased, but only by using new formulas. On the other hand, a triply exponential upper bound on a decision procedure for Presburger Arithmetic was proved by Oppen (1978). 
A more tight complexity bound was shown using alternating complexity classes by . The set of true statements in Presburger arithmetic (PA) is shown complete for TimeAlternations(22nO(1), n). Thus, its complexity is between double exponential nondeterministic time (2-NEXP) and double exponential space (2-EXPSPACE). Completeness is under polynomial time many-to-one reductions. (Also, note that while Presburger arithmetic is commonly abbreviated PA, in mathematics in general PA usually means Peano arithmetic.)
For a more fine-grained result, let PA(i) be the set of true Σi PA statements, and PA(i, j) the set of true Σi PA statements with each quantifier block limited to j variables. '&lt;' is considered to be quantifier-free; here, bounded quantifiers are counted as quantifiers.
PA(1, j) is in P, while PA(1) is NP-complete.
For i &gt; 0 and j &gt; 2, PA(i + 1, j) is ΣiP-complete. The hardness result only needs j&gt;2 (as opposed to j=1) in the last quantifier block.
For i&gt;0, PA(i+1) is ΣiEXP-complete (and is TimeAlternations(2nO(i), i)-complete). 
Applications.
Because Presburger arithmetic is decidable, automatic theorem provers for Presburger arithmetic exist. For example, the Coq proof assistant system features the tactic omega for Presburger arithmetic and the Isabelle proof assistant contains a verified quantifier elimination procedure by . The double exponential complexity of the theory makes it infeasible to use the theorem provers on complicated formulas, but this behavior occurs only in the presence of nested quantifiers: Oppen and Nelson (1980) describe an automatic theorem prover which uses the simplex algorithm on an extended Presburger arithmetic without nested quantifiers to prove some of the instances of quantifier-free Presburger arithmetic formulas. More recent satisfiability modulo theories solvers use complete integer programming techniques to handle quantifier-free fragment of Presburger arithmetic theory 
Presburger arithmetic can be extended to include multiplication by constants, since multiplication is repeated addition. Most array subscript calculations then fall within the region of decidable problems. This approach is the basis of at least five proof-of-correctness systems for computer programs, beginning with the Stanford Pascal Verifier in the late 1970s and continuing through to Microsoft's Spec# system of 2005.
Presburger-definable integer relation.
Some properties are now given about integer relations definable in Presburger Arithmetic. For the sake of simplicity, all relations considered in this section are over non-negative integers.
A relation is Presburger-definable if and only if it is a semilinear set.
A unary integer relation formula_2, that is, a set of non-negative integers, is Presburger-definable if and only if it is ultimately periodic. That is, if there exists a threshold formula_3 and a positive period formula_4 such that, for all integer formula_5 such that formula_6, formula_7 if and only if formula_8.
By the Cobham–Semenov theorem, a relation is Presburger-definable if and only if it is definable in Büchi arithmetic of base formula_9 for all formula_10. A relation definable in Büchi arithmetic of base formula_9 and formula_12 for formula_9 and formula_12 being multiplicatively independent integers is Presburger definable.
An integer relation formula_2 is Presburger-definable if and only if all sets of integers which are definable in first order logic with addition and formula_2 (that is, Presburger Arithmetic plus a predicate for formula_2) are Presburger-definable. Equivalently, for each relation formula_2 which is not Presburger-definable, there exists a first-order formula with addition and formula_2 which defines a set of integers which is not definable using only addition.
Muchnik's characterization.
Presburger-definable relations admit another characterization: by Muchnik's theorem. It is more complicated to state, but led to the proof of the two former characterizations. Before Muchnik's theorem can be stated, some additional definitions must be introduced.
Let formula_20 be a set, the section formula_21 of formula_2, for formula_23 and formula_24 is defined as 
Given two sets formula_26 and a formula_27-tuple of integers formula_28, the set formula_2 is called formula_30-periodic in formula_31 if, for all formula_32 such that formula_33 then formula_34 if and only if formula_35. For formula_36, the set formula_2 is said to be formula_38-periodic in formula_31 if it is formula_40-periodic for some formula_41 such that 
denote the cube of size formula_9 whose lesser corner is formula_45.
Intuitively, the integer formula_38 represents the length of a shift, the integer formula_9 is the size of the cubes and formula_59 is the threshold before the periodicity. This result remains true when the condition 
is replaced either by formula_61 or by formula_62.
This characterization led to the so-called "definable criterion for definability in Presburger arithmetic", that is: there exists a first-order formula with addition and a formula_27-ary predicate formula_2 which holds if and only if formula_2 is interpreted by a Presburger-definable relation. Muchnik's theorem also allows one to prove that it is decidable whether an automatic sequence accepts a Presburger-definable set.

