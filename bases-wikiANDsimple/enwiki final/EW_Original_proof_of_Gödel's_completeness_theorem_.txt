
The proof of Gödel's completeness theorem given by Kurt Gödel in his doctoral dissertation of 1929 (and a shorter version of the proof, published as an article in 1930, titled "The completeness of the axioms of the functional calculus of logic" (in German)) is not easy to read today; it uses concepts and formalisms that are no longer used and terminology that is often obscure. The version given below attempts to represent all the steps in the proof and all the important ideas faithfully, while restating the proof in the modern language of mathematical logic. This outline should not be considered a rigorous proof of the theorem.
Assumptions.
We work with first-order predicate calculus. Our languages allow constant, function and relation symbols. Structures consist of (non-empty) domains and interpretations of the relevant symbols as constant members, functions or relations over that domain.
We assume classical logic (as opposed to intuitionistic logic for example).
We fix some axiomatization (i.e. a syntax-based, machine-manageable proof system) of the predicate calculus: logical axioms and rules of inference. Any of the several well-known equivalent axiomatizations will do. Gödel's original proof assumed the Hilbert-Ackermann proof system.
We assume without proof all the basic well-known results about our formalism that we need, such as the normal form theorem or the soundness theorem.
We axiomatize predicate calculus "without equality" (sometimes confusingly called "without identity"), i.e. there are no special axioms expressing the properties of (object) equality as a special relation symbol. After the basic form of the theorem has been proved, it will be easy to extend it to the case of predicate calculus "with equality".
Statement of the theorem and its proof.
In the following, we state two equivalent forms of the theorem, and show their equivalence.
Later, we prove the theorem. This is done in the following steps:
Theorem 1. Every valid formula (true in all structures) is provable..
This is the most basic form of the completeness theorem. We immediately restate it in a form more convenient for our purposes:
When we say "all structures", it is important to specify that the structures involved are classical (Tarskian) interpretations I, where I= (U is a non-empty (possibly infinite) set of objects, whereas F is a set of functions from expressions of the interpreted symbolism into U). [By contrast, so-called "free logics" countenance possibly empty sets for U. For more regarding free logics, see the work of Karel Lambert.]
Theorem 2. Every formula φ is either refutable or satisfiable in some structure..
"φ is refutable" means "by definition" "¬φ is provable".
Equivalence of both theorems.
If Theorem 1 holds, and φ is not satisfiable in any structure, then ¬φ is valid in all structures and therefore provable, thus φ is refutable and Theorem 2 holds. If on the other hand Theorem 2 holds and φ is valid in all structures, then ¬φ is not satisfiable in any structure and therefore refutable; then ¬¬φ is provable and then so is φ, thus Theorem 1 holds.
Proof of theorem 2: first step.
We approach the proof of Theorem 2 by successively restricting the class of all formulas φ for which we need to prove "φ is either refutable or satisfiable". At the beginning we need to prove this for all possible formulas φ in our language. However, suppose that for every formula φ there is some formula ψ taken from a more restricted class of formulas C, such that "ψ is either refutable or satisfiable" → "φ is either refutable or satisfiable". Then, once this claim (expressed in the previous sentence) is proved, it will suffice to prove "φ is either refutable or satisfiable" only for φ's belonging to the class C. If φ is provably equivalent to ψ ("i.e.", (φ≡ψ) is provable), then it is indeed the case that "ψ is either refutable or satisfiable" → "φ is either refutable or satisfiable" (the soundness theorem is needed to show this).
There are standard techniques for rewriting an arbitrary formula into one that does not use function or constant symbols, at the cost of introducing additional quantifiers; we will therefore assume that all formulas are free of such symbols. Gödel's paper uses a version of first-order predicate calculus that has no function or constant symbols to begin with.
Next we consider a generic formula φ (which no longer uses function or constant symbols) and apply the prenex form theorem to find a formula ψ in "normal form" such that φ≡ψ (ψ being in "normal form" means that all the quantifiers in ψ, if there are any, are found at the very beginning of ψ). It follows now that we need only prove Theorem 2 for formulas φ in normal form.
Next, we eliminate all free variables from φ by quantifying them existentially: if, say, x1...xn are free in φ, we form formula_1. If ψ is satisfiable in a structure M, then certainly so is φ and if ψ is refutable, then formula_2 is provable, and then so is ¬φ, thus φ is refutable. We see that we can restrict φ to be a "sentence", that is, a formula with no free variables.
Finally, we would like, for reasons of technical convenience, that the "prefix" of φ (that is, the string of quantifiers at the beginning of φ, which is in normal form) begin with a universal quantifier and end with an existential quantifier. To achieve this for a generic φ (subject to restrictions we have already proved), we take some one-place relation symbol F unused in φ, and two new variables y and z.. If φ = (P)Φ, where (P) stands for the prefix of φ and Φ for the "matrix" (the remaining, quantifier-free part of φ) we form formula_3. Since formula_4 is clearly provable, it is easy to see that formula_5 is provable.
Reducing the theorem to formulas of degree 1.
Our generic formula φ now is a sentence, in normal form, and its prefix starts with a universal quantifier and ends with an existential quantifier. Let us call the class of all such formulas R. We are faced with proving that every formula in R is either refutable or satisfiable. Given our formula φ, we group strings of quantifiers of one kind together in blocks:
We define the degree of formula_7 to be the number of universal quantifier blocks, separated by existential quantifier blocks as shown above, in the prefix of formula_7. The following lemma, which Gödel adapted from Skolem's proof of the Löwenheim–Skolem theorem, lets us sharply reduce the complexity of the generic formula formula_7 we need to prove the theorem for:
Lemma. Let k&gt;=1. If every formula in R of degree k is either refutable or satisfiable, then so is every formula in R of degree k+1.
Proof. Let φ be a formula of degree k+1; then we can write it as
where (P) is the remainder of the prefix of formula_7 (it is thus of degree k-1) and formula_16 is the quantifier-free matrix of formula_7. x, y, u and v denote here "tuples" of variables rather than single variables; "e.g." formula_18 really stands for formula_19 where formula_20 are some distinct variables.
Let now x' and y' be tuples of previously unused variables of the same length as x and y respectively, and let Q be a previously unused relation symbol that takes as many arguments as the sum of lengths of x and y; we consider the formula
Clearly, formula_22 is provable.
Now since the string of quantifiers formula_23 does not contain variables from x or y, the following equivalence is easily provable with the help of whatever formalism we're using:
And since these two formulas are equivalent, if we replace the first with the second inside Φ, we obtain the formula Φ' such that Φ≡Φ':
Now Φ' has the form formula_26, where (S) and (S') are some quantifier strings, ρ and ρ' are quantifier-free, and, furthermore, no variable of (S) occurs in ρ' and no variable of (S') occurs in ρ. Under such conditions every formula of the form formula_27, where (T) is a string of quantifiers containing all quantifiers in (S) and (S') interleaved among themselves in any fashion, but maintaining the relative order inside (S) and (S'), will be equivalent to the original formula Φ'(this is yet another basic result in first-order predicate calculus that we rely on). To wit, we form Ψ as follows:
and we have formula_29.
Now formula_30 is a formula of degree k and therefore by assumption either refutable or satisfiable.
If formula_30 is satisfiable in a structure M, then, considering formula_32, we see that formula_7 is satisfiable as well.
If formula_30 is refutable, then so is formula_35, which is equivalent to it; thus formula_36 is provable.
Now we can replace all occurrences of Q inside the provable formula formula_36 by some other formula dependent on the same variables, and we will still get a provable formula.
In this particular case, we replace Q(x',y') in formula_36 with the formula formula_40. Here (x,y|x',y') means that instead of ψ we are writing a different formula, in which x and y are replaced with x' and y'. Q(x,y) is simply replaced by formula_41.
formula_36 then becomes
and this formula is provable; since the part under negation and after the formula_44 sign is obviously provable, and the part under negation and before the formula_44 sign is obviously φ, just with x and y replaced by x' and y', we see that formula_46 is provable, and φ is refutable. We have proved that φ is either satisfiable or refutable, and this concludes the proof of the Lemma.
Notice that we could not have used formula_40 instead of Q(x',y') from the beginning, because formula_30 would not have been a well-formed formula in that case. This is why we cannot naively use the argument appearing at the comment that precedes the proof.
Proving the theorem for formulas of degree 1.
As shown by the Lemma above, we only need to prove our theorem for formulas φ in R of degree 1. φ cannot be of degree 0, since formulas in R have no free variables and don't use constant symbols. So the formula φ has the general form:
Now we define an ordering of the k-tuples of natural numbers as follows: formula_50 should hold if either formula_51, or formula_52, and formula_53 precedes formula_54 in lexicographic order. [Here formula_55 denotes the sum of the terms of the tuple.] Denote the nth tuple in this order by formula_56.
Set the formula formula_57 as formula_58. Then put formula_59 as 
Lemma: For every "n", φformula_61.
Proof: By induction on n; we have formula_62, where the latter implication holds by variable substitution, since the ordering of the tuples is such that formula_63. But the last formula is equivalent to formula_64φ.
For the base case, formula_65 is obviously a corollary of φ as well. So the Lemma is proven.
Now if formula_66 is refutable for some "n", it follows that φ is refutable. On the other hand, suppose that formula_66 is not refutable for any "n". Then for each "n" there is some way of assigning truth values to the distinct subpropositions formula_68 (ordered by their first appearance in formula_59; "distinct" here means either distinct predicates, or distinct bound variables) in formula_70, such that formula_66 will be true when each proposition is evaluated in this fashion. This follows from the completeness of the underlying propositional logic.
We will now show that there is such an assignment of truth values to formula_68, so that all formula_59 will be true: The formula_68 appear in the same order in every formula_66; we will inductively define a general assignment to them by a sort of "majority vote": Since there are infinitely many assignments (one for each formula_66) affecting formula_77, either infinitely many make formula_77 true, or infinitely many make it false and only finitely many make it true. In the former case, we choose formula_77 to be true in general; in the latter we take it to be false in general. Then from the infinitely many "n" for which formula_77 through formula_81 are assigned the same truth value as in the general assignment, we pick a general assignment to formula_68 in the same fashion.
This general assignment must lead to every one of the formula_83 and formula_84 being true, since if one of the formula_83 were false under the general assignment, formula_59 would also be false for every "n &gt; k". But this contradicts the fact that for the finite collection of general formula_68 assignments appearing in formula_84, there are infinitely many "n" where the assignment making formula_59 true matches the general assignment.
From this general assignment, which makes all of the formula_84 true, we construct an interpretation of the language's predicates that makes φ true. The universe of the model will be the natural numbers. Each i-ary predicate formula_30 should be true of the naturals formula_92 precisely when the proposition formula_93 is either true in the general assignment, or not assigned by it (because it never appears in any of the formula_84).
In this model, each of the formulas formula_95 is true by construction. But this implies that φ itself is true in the model, since the formula_96 range over all possible k-tuples of natural numbers. So φ is satisfiable, and we are done.
Intuitive explanation.
We may write each Bi as Φ(x1...xk,y1...ym) for some x-s, which we may call "first arguments" and y-s that we may call "last arguments".
Take B1 for example. Its "last arguments" are z2,z3...zm+1, and for every possible combination of k of these variables there is some j so that they appear as "first arguments" in Bj. Thus for large enough n1, Dn1 has the property that the "last arguments" of B1 appear, in every possible combinations of k of them, as "first arguments" in other Bj-s within Dn. For every Bi there is a Dni with the corresponding property.
Therefore in a model that satisfies all the Dn-s, there are objects corresponding to z1, z2... and each combination of k of these appear as "first arguments" in some Bj, meaning that for every k of these objects zp1...zpk there are zq1...zqm, which makes Φ(zp1...zpk,zq1...zqm) satisfied. By taking a submodel with only these z1, z2... objects, we have a model satisfying φ.
Extensions.
Extension to first-order predicate calculus with equality.
Gödel reduced a formula containing instances of the equality predicate to ones without it in an extended language. His method involves replacing a formula φ containing some instances of equality with the formula
Here formula_105 denote the predicates appearing in φ (with formula_106 their respective arities), and φ' is the formula φ with all occurrences of equality replaced with the new predicate "Eq". If this new formula is refutable, the original φ was as well; the same is true of satisfiability, since we may take a quotient of satisfying model of the new formula by the equivalence relation representing "Eq". This quotient is well-defined with respect to the other predicates, and therefore will satisfy the original formula φ.
Extension to countable sets of formulas.
Gödel also considered the case where there are a countably infinite collection of formulas. Using the same reductions as above, he was able to consider only those cases where each formula is of degree 1 and contains no uses of equality. For a countable collection of formulas formula_107 of degree 1, we may define formula_108 as above; then define formula_109 to be the closure of formula_110. The remainder of the proof then went through as before.
Extension to arbitrary sets of formulas.
When there is an uncountably infinite collection of formulas, the Axiom of Choice (or at least some weak form of it) is needed. Using the full AC, one can well-order the formulas, and prove the uncountable case with the same argument as the countable one, except with transfinite induction. Other approaches can be used to prove that the completeness theorem in this case is equivalent to the Boolean prime ideal theorem, a weak form of AC.

